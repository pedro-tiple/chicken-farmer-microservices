syntax = "proto3";

package chicken_farmer.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "internal/pkg/grpc";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  security_definitions: {
    security: {
      key: "BearerAuth"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
        description: "Authentication token, prefixed by Bearer: Bearer <token>"
      }
    }
  }
  security: {
    security_requirement: {
      key: "BearerAuth"
    }
  }
};

service FarmerPublicService {
  rpc Register(RegisterRequest) returns (RegisterResponse) {
    option (google.api.http) = {
      put: "/v1/farmer/register",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: { } // Disable security key
    };
  }

  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/v1/farmer/login",
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: { } // Disable security key
    };
  }
}

message RegisterRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: [
        "farmer_name",
        "farm_name",
        "password"
      ]
    }
  };

  string farmer_name = 1 ;
  string farm_name = 2 ;
  string password = 3 ;
}
message RegisterResponse {
  string farmer_id = 1;
  string farm_id = 2;
}

message LoginRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: [
        "farmer_name",
        "password"
      ]
    }
  };
  string farmer_name = 1 ;
  string password = 2 ;
}
message LoginResponse {
  string auth_token = 1;
}

service FarmerPrivateService {
  rpc GrantGoldEggs(GrantGoldEggsRequest) returns (GrantGoldEggsResponse) {}
  rpc SpendGoldEggs(SpendGoldEggsRequest) returns (SpendGoldEggsResponse) {}
  rpc GetGoldEggs(GetGoldEggsRequest) returns (GetGoldEggsResponse) {}
}

message GrantGoldEggsRequest {
  uint32 amount = 1;
  string farmer_id = 2;

}
message GrantGoldEggsResponse {}

message SpendGoldEggsRequest {
  uint32 amount = 1;
  string farmer_id = 2;
}
message SpendGoldEggsResponse {}

message GetGoldEggsRequest {
  string farmer_id = 1;
}
message GetGoldEggsResponse {
  uint32 amount = 1;
}
