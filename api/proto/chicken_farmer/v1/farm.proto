syntax = "proto3";

package chicken_farmer.v1;

import "google/api/annotations.proto";
// import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
// import "github.com/mwitkow/go-proto-validators/validator.proto";

option go_package = "internal/pkg/grpc";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  security_definitions: {
    security: {
      key: "BearerAuth"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
        description: "Authentication token, prefixed by Bearer: Bearer <token>"
      }
    }
  }
  security: {
    security_requirement: {
      key: "BearerAuth"
    }
  }
};

service FarmService {
  rpc NewFarm(NewFarmRequest) returns (NewFarmResponse) {}
  rpc DeleteFarm(DeleteFarmRequest) returns (DeleteFarmResponse) {}

  // REST exposed functions
  rpc FarmDetails(FarmDetailsRequest) returns (FarmDetailsResponse) {
    option (google.api.http) = {get: "/v1/farm"};
  }

  rpc BuyBarn(BuyBarnRequest) returns (BuyBarnResponse) {
    option (google.api.http) = {
      post: "/v1/farm/barns/buy",
      body: "*"
    };
  }

  rpc BuyFeedBag(BuyFeedBagRequest) returns (BuyFeedBagResponse) {
    option (google.api.http) = {
      post: "/v1/farm/barns/{barn_id}/buy-feed-bag",
      body: "*"
    };
  }

  rpc BuyChicken(BuyChickenRequest) returns (BuyChickenResponse) {
    option (google.api.http) = {
      post: "/v1/farm/chickens/buy",
      body: "*"
    };
  }

  rpc SellChicken(SellChickenRequest) returns (SellChickenResponse) {
    option (google.api.http) = {
      post: "/v1/farm/chickens/{chicken_id}/sell",
      body: "*"
    };
  }

  rpc FeedChicken(FeedChickenRequest) returns (FeedChickenResponse) {
    option (google.api.http) = {
      post: "/v1/farm/chickens/{chicken_id}/feed",
      body: "*"
    };
  }

}

message Farm {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Farm"
      required: [
        "name",
        "golden_eggs",
        "day",
        "barns"
      ]
    }
  };

  string name = 1;
  uint32 day = 2;
  uint32 golden_eggs = 3;
  repeated Barn barns = 4;
}

message Barn {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Barn"
      required: [
        "id",
        "feed",
        "has_auto_feeder",
        "chickens"
      ]
    }
  };

  string id = 1;
  uint32 feed = 2;
  bool has_auto_feeder = 3;
  repeated Chicken chickens = 4;
}

message Chicken {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Chicken"
      required: [
        "id",
        "date_of_birth",
        "resting_until",
        "normal_eggs_laid",
        "gold_eggs_laid"
      ]
    }
  };

  string id = 1;
  uint32 date_of_birth = 2;
  uint32 resting_until = 5;
  uint32 normal_eggs_laid = 3;
  uint32 gold_eggs_laid = 4;
}

message NewFarmRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: [
        "owner_id",
        "name"
      ]
    }
  };

  string owner_id = 1;
  string name = 2;
}
message NewFarmResponse {
  string farm_id = 1;
}

message DeleteFarmRequest {
  string farm_id = 1;
}
message DeleteFarmResponse {
}

message FarmDetailsRequest {}
message FarmDetailsResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: [
        "farm"
      ]
    }
  };

  Farm farm = 1;
}

message BuyBarnRequest {}
message BuyBarnResponse {}

message BuyFeedBagRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: [
        "barn_id",
        "amount"
      ]
    }
  };

  string barn_id = 1;
  uint32 amount = 2;
}
message BuyFeedBagResponse {}

message BuyChickenRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: [
        "barn_id"
      ]
    }
  };

  string barn_id = 1;
}
message BuyChickenResponse {
  string id = 1;
}

message SellChickenRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: [
        "chicken_id"
      ]
    }
  };

  string chicken_id = 1;
}
message SellChickenResponse {
}

message FeedChickenRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: [
        "chicken_id"
      ]
    }
  };

  string chicken_id = 1;
}
message FeedChickenResponse {}

message FeedChickensOfBarnRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: [
        "barn_id"
      ]
    }
  };

  string barn_id = 1;
}
message FeedChickensOfBarnResponse {}
